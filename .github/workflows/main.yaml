name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        include:
         - py: "python38"
           intrinsics: native
         - py: "python39"
           intrinsics: native
         - py: "python310"
           intrinsics: native
         - py: "python310"
           intrisics: generic

    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v16
    - uses: cachix/cachix-action@v10
      with:
        name: mdtraj
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        pushFilter: "(-source$|nixpkgs.tar.gz$)"
    - name: Build
      run: |
        if [ "$INTRISICS" = "generic" ]; then
          nix build .#$PYTHON.pkgs.mdtraj-generic --print-build-logs
        else
          nix build .#$PYTHON.pkgs.mdtraj --print-build-logs
        fi
      env:
        PYTHON: ${{ matrix.py }}
        INTRINSICS: ${{ matrix.intrinsics }}
    - name: Dev docs
      if: ${{ github.ref == 'refs/heads/master' && matrix.py == 'python39' }}
      run: |
        VERSION=$(nix eval --raw .#python3Packages.mdtraj.version)
        nix shell nixpkgs#awscli2 -c aws s3 sync --quiet result/share/docs/html s3://mdtraj/$VERSION

        # List all versions in S3
        nix shell nixpkgs#awscli2 -c aws s3 ls s3://mdtraj | grep PRE | grep -v development | awk '{print $2}' | python -c 'import sys, json; from distutils.version import LooseVersion; values = [x.strip().rstrip("/") for x in sys.stdin.readlines()]; values.sort(key=LooseVersion); print(json.dumps([{"version": x, "display": x.rstrip(".0"), "url": f"http://www.mdtraj.org/{x}/index.html", "latest": i==len(values)-1} for i, x in enumerate(values)], indent=2, sort_keys=True))' > versions.json
        nix shell nixpkgs#awscli2 -c aws s3 cp --quiet versions.json s3://mdtraj
        nix shell nixpkgs#awscli2 -c aws s3 cp --quiet docs/index.html s3://mdtraj
      env:
        AWS_DEFAULT_REGION: us-east-1
        AWS_ACCESS_KEY_ID: '${{ secrets.AWS_ACCESS_KEY_ID }}'
        AWS_SECRET_ACCESS_KEY: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
